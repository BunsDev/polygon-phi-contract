/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PhiClaim, PhiClaimInterface } from "../../contracts/PhiClaim";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "AllreadyClaimedObject",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct PhiClaim.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "NotAdminCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Hello",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "LogClaimObject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "verifierAddress",
        type: "address",
      },
    ],
    name: "SetAdminSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "SetCoupon",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "checkClaimedStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct PhiClaim.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "claimQuestObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdminSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
    ],
    name: "getCouponType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "adminSigner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "phiClaimedLists",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "verifierAdderss",
        type: "address",
      },
    ],
    name: "setAdminSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "setCouponType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600062000020600162000087565b9050801562000039576000805461ff0019166101001790555b801562000080576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50620001a8565b60008054610100900460ff161562000120578160ff166001148015620000c05750620000be306200019960201b620009591760201c565b155b620001185760405162461bcd60e51b815260206004820152602e6024820152600080516020620016f683398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff8084169116106200017f5760405162461bcd60e51b815260206004820152602e6024820152600080516020620016f683398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200010f565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b61153e80620001b86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806391d1485411610097578063b6e9201011610066578063b6e9201014610223578063cb568fd414610254578063d547741f14610267578063d61108331461027a57600080fd5b806391d14854146101b457806392ca3180146101ed578063a217fddf14610200578063a4cfd20a1461020857600080fd5b8063248a9ca3116100d3578063248a9ca31461014a5780632f2ff15d1461017b57806336568abe1461018e578063485cc955146101a157600080fd5b806301ffc9a7146100fa5780630c01a2fd14610122578063183bbe8014610137575b600080fd5b61010d610108366004611014565b6102ba565b60405190151581526020015b60405180910390f35b6101356101303660046110ac565b610353565b005b6101356101453660046111a4565b610575565b61016d6101583660046111bf565b60009081526065602052604090206001015490565b604051908152602001610119565b6101356101893660046111d8565b610697565b61013561019c3660046111d8565b6106c1565b6101356101af366004611204565b61074d565b61010d6101c23660046111d8565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61016d6101fb3660046112bb565b610842565b61016d600081565b6097546040516001600160a01b039091168152602001610119565b61016d6102313660046112f8565b609960209081526000938452604080852082529284528284209052825290205481565b610135610262366004611334565b61086a565b6101356102753660046111d8565b610934565b61016d6102883660046112f8565b6001600160a01b0392831660009081526099602090815260408083209490951682529283528381209181529152205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061034d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b3360009081526099602090815260408083206001600160a01b0389168452825280832087845290915290205485908590600019016103cb576040517fddaf7e56000000000000000000000000000000000000000000000000000000008152336004820152602481018290526044015b60405180910390fd5b3332146103d757600080fd5b6000879050600088609a88886040516103f1929190611379565b908152604080519182900360209081018320546001600160a01b03909416908301528101919091523360608201526080016040516020818303038152906040528051906020012090506104448186610968565b6104905760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420636f75706f6e00000000000000000000000000000000000060448201526064016103c2565b3360008181526099602090815260408083206001600160a01b038e811685529083528184208d8552909252918290206001905590517f0f827b640000000000000000000000000000000000000000000000000000000081526004810192909252602482018a9052831690630f827b6490604401600060405180830381600087803b15801561051d57600080fd5b505af1158015610531573d6000803e3d6000fd5b50506040518a81523392507fa7257a8b02d81b3fb6715b360a5b4f02dcdc4a4b36e79108b7738ee77706d8cb915060200160405180910390a2505050505050505050565b3360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602052604090205460ff166105df576040517fd1a920980000000000000000000000000000000000000000000000000000000081523360048201526024016103c2565b6001600160a01b0381166106355760405162461bcd60e51b815260206004820152601360248201527f63616e742073657420616464726573732830290000000000000000000000000060448201526064016103c2565b609780547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517fe962aa622975becd620ca7b16db507022a2b43cc5657b30c4b907a7ecfb8042590600090a250565b6000828152606560205260409020600101546106b281610a70565b6106bc8383610a7d565b505050565b6001600160a01b038116331461073f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084016103c2565b6107498282610b1f565b5050565b60006107596001610ba2565b90508015610771576000805461ff0019166101001790555b6001600160a01b03821661078457600080fd5b609780547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384161790556107bf610cdb565b6107ca600084610d5a565b600060988190556040517fbcdfe0d5b27dd186282e187525415c57ea3077c34efb39148111e4d342e7ab0e9190a180156106bc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6000609a8260405161085491906113b9565b9081526020016040518091039020549050919050565b3360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602052604090205460ff166108d4576040517fd1a920980000000000000000000000000000000000000000000000000000000081523360048201526024016103c2565b80609a836040516108e591906113b9565b9081526020016040518091039020819055507fd48ea628c05cf728666ea64aa7f8a243f1b39c14c572c1bfffb231d92cba27f18282604051610928929190611401565b60405180910390a15050565b60008281526065602052604090206001015461094f81610a70565b6106bc8383610b1f565b6001600160a01b03163b151590565b600080600184846040015185600001518660200151604051600081526020016040526040516109b3949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa1580156109d5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610a5857604080517fd1c36d9d0000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b03831660248201526044810186905284516064820152602085015160848201529084015160ff1660a482015260c4016103c2565b6097546001600160a01b039081169116149392505050565b610a7a8133610d64565b50565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff166107495760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610adb3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff16156107495760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008054610100900460ff1615610c3f578160ff166001148015610bc55750303b155b610c375760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103c2565b506000919050565b60005460ff808416911610610cbc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103c2565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610d585760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103c2565b565b6107498282610a7d565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff1661074957610da2816001600160a01b03166014610de4565b610dad836020610de4565b604051602001610dbe929190611423565b60408051601f198184030181529082905262461bcd60e51b82526103c2916004016114a4565b60606000610df38360026114cd565b610dfe9060026114ec565b67ffffffffffffffff811115610e1657610e1661106d565b6040519080825280601f01601f191660200182016040528015610e40576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610e7757610e77611504565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610eda57610eda611504565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610f168460026114cd565b610f219060016114ec565b90505b6001811115610fbe577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610f6257610f62611504565b1a60f81b828281518110610f7857610f78611504565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93610fb78161151a565b9050610f24565b50831561100d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103c2565b9392505050565b60006020828403121561102657600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461100d57600080fd5b80356001600160a01b0381168114610cd657600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156110a6576110a661106d565b60405290565b600080600080600085870360c08112156110c557600080fd5b6110ce87611056565b955060208701359450604087013567ffffffffffffffff808211156110f257600080fd5b818901915089601f83011261110657600080fd5b81358181111561111557600080fd5b8a602082850101111561112757600080fd5b60208301965080955050505060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08201121561116357600080fd5b5061116c611083565b606087013581526080870135602082015260a087013560ff8116811461119157600080fd5b6040820152949793965091945092919050565b6000602082840312156111b657600080fd5b61100d82611056565b6000602082840312156111d157600080fd5b5035919050565b600080604083850312156111eb57600080fd5b823591506111fb60208401611056565b90509250929050565b6000806040838503121561121757600080fd5b61122083611056565b91506111fb60208401611056565b600082601f83011261123f57600080fd5b813567ffffffffffffffff8082111561125a5761125a61106d565b604051601f8301601f19908116603f011681019082821181831017156112825761128261106d565b8160405283815286602085880101111561129b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156112cd57600080fd5b813567ffffffffffffffff8111156112e457600080fd5b6112f08482850161122e565b949350505050565b60008060006060848603121561130d57600080fd5b61131684611056565b925061132460208501611056565b9150604084013590509250925092565b6000806040838503121561134757600080fd5b823567ffffffffffffffff81111561135e57600080fd5b61136a8582860161122e565b95602094909401359450505050565b8183823760009101908152919050565b60005b838110156113a457818101518382015260200161138c565b838111156113b3576000848401525b50505050565b600082516113cb818460208701611389565b9190910192915050565b600081518084526113ed816020860160208601611389565b601f01601f19169290920160200192915050565b60408152600061141460408301856113d5565b90508260208301529392505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161145b816017850160208801611389565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351611498816028840160208801611389565b01602801949350505050565b60208152600061100d60208301846113d5565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156114e7576114e76114b7565b500290565b600082198211156114ff576114ff6114b7565b500190565b634e487b7160e01b600052603260045260246000fd5b600081611529576115296114b7565b50600019019056fea164736f6c634300080d000a496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

type PhiClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiClaim__factory extends ContractFactory {
  constructor(...args: PhiClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiClaim> {
    return super.deploy(overrides || {}) as Promise<PhiClaim>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PhiClaim {
    return super.attach(address) as PhiClaim;
  }
  override connect(signer: Signer): PhiClaim__factory {
    return super.connect(signer) as PhiClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiClaimInterface {
    return new utils.Interface(_abi) as PhiClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiClaim {
    return new Contract(address, _abi, signerOrProvider) as PhiClaim;
  }
}
