/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PhiShop, PhiShopInterface } from "../../contracts/PhiShop";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_freeObjectAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_premiumObjectAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wallPaperAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_basePlateAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiverAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyValue",
        type: "uint256",
      },
    ],
    name: "LogShopBuyObject",
    type: "event",
  },
  {
    inputs: [],
    name: "basePlateAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeObjectAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "premiumObjectAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiverAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ftokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "ptokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "wtokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "btokenIds",
        type: "uint256[]",
      },
    ],
    name: "shopBuyObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wallPaperAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610a32380380610a328339810160408190526100309161006e565b6001600160a01b0393841660805291831660a052821660c0521660e0526100c2565b80516001600160a01b038116811461006957600080fd5b919050565b6000806000806080858703121561008457600080fd5b61008d85610052565b935061009b60208601610052565b92506100a960408601610052565b91506100b760608601610052565b905092959194509250565b60805160a05160c05160e05161091d6101156000396000818160ce01526104dc015260008181607101526103c301526000818161014b01526102ab0152600081816101020152610213015261091d6000f3fe60806040526004361061005a5760003560e01c8063957355781161004357806395735578146100f0578063976ec7ab14610124578063b89ec2fe1461013957600080fd5b80631dad50a31461005f5780631fa13729146100bc575b600080fd5b34801561006b57600080fd5b506100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100c857600080fd5b506100937f000000000000000000000000000000000000000000000000000000000000000081565b3480156100fc57600080fd5b506100937f000000000000000000000000000000000000000000000000000000000000000081565b610137610132366004610753565b61016d565b005b34801561014557600080fd5b506100937f000000000000000000000000000000000000000000000000000000000000000081565b3361017757600080fd5b3332146101e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6d73672073656e64657220696e76616c69640000000000000000000000000000604482015260640160405180910390fd5b835115610295576040517f21f4ce3e0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000009073ffffffffffffffffffffffffffffffffffffffff8216906321f4ce3e906102619089908990600401610867565b600060405180830381600087803b15801561027b57600080fd5b505af115801561028f573d6000803e3d6000fd5b50505050505b8251156103ad5760405163a6a41a2960e01b81527f00000000000000000000000000000000000000000000000000000000000000009060009073ffffffffffffffffffffffffffffffffffffffff83169063a6a41a29906102fa90889060040161089e565b602060405180830381865afa158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b91906108b8565b90508173ffffffffffffffffffffffffffffffffffffffff16628788cb8289886040518463ffffffff1660e01b8152600401610378929190610867565b6000604051808303818588803b15801561039157600080fd5b505af11580156103a5573d6000803e3d6000fd5b505050505050505b8151156104c65760405163a6a41a2960e01b81527f00000000000000000000000000000000000000000000000000000000000000009060009073ffffffffffffffffffffffffffffffffffffffff83169063a6a41a299061041290879060040161089e565b602060405180830381865afa15801561042f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045391906108b8565b90508173ffffffffffffffffffffffffffffffffffffffff1663e0e0bb3b8289876040518463ffffffff1660e01b8152600401610491929190610867565b6000604051808303818588803b1580156104aa57600080fd5b505af11580156104be573d6000803e3d6000fd5b505050505050505b8051156105df5760405163a6a41a2960e01b81527f00000000000000000000000000000000000000000000000000000000000000009060009073ffffffffffffffffffffffffffffffffffffffff83169063a6a41a299061052b90869060040161089e565b602060405180830381865afa158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c91906108b8565b90508173ffffffffffffffffffffffffffffffffffffffff16636a957e2a8289866040518463ffffffff1660e01b81526004016105aa929190610867565b6000604051808303818588803b1580156105c357600080fd5b505af11580156105d7573d6000803e3d6000fd5b505050505050505b7f0339939b24f7ca321adc6c51ca056689d074983bf300a819ee5bfebfd518978f3386835185518851895161061491906108d1565b61061e91906108d1565b61062891906108d1565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681529390921660208401529082015234606082015260800160405180910390a15050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126106ab57600080fd5b8135602067ffffffffffffffff808311156106c8576106c861066b565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110848211171561070b5761070b61066b565b60405293845285810183019383810192508785111561072957600080fd5b83870191505b848210156107485781358352918301919083019061072f565b979650505050505050565b600080600080600060a0868803121561076b57600080fd5b853573ffffffffffffffffffffffffffffffffffffffff8116811461078f57600080fd5b9450602086013567ffffffffffffffff808211156107ac57600080fd5b6107b889838a0161069a565b955060408801359150808211156107ce57600080fd5b6107da89838a0161069a565b945060608801359150808211156107f057600080fd5b6107fc89838a0161069a565b9350608088013591508082111561081257600080fd5b5061081f8882890161069a565b9150509295509295909350565b600081518084526020808501945080840160005b8381101561085c57815187529582019590820190600101610840565b509495945050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000610896604083018461082c565b949350505050565b6020815260006108b1602083018461082c565b9392505050565b6000602082840312156108ca57600080fd5b5051919050565b6000821982111561090b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea164736f6c634300080d000a";

type PhiShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiShop__factory extends ContractFactory {
  constructor(...args: PhiShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _freeObjectAddress: string,
    _premiumObjectAddress: string,
    _wallPaperAddress: string,
    _basePlateAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiShop> {
    return super.deploy(
      _freeObjectAddress,
      _premiumObjectAddress,
      _wallPaperAddress,
      _basePlateAddress,
      overrides || {}
    ) as Promise<PhiShop>;
  }
  override getDeployTransaction(
    _freeObjectAddress: string,
    _premiumObjectAddress: string,
    _wallPaperAddress: string,
    _basePlateAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _freeObjectAddress,
      _premiumObjectAddress,
      _wallPaperAddress,
      _basePlateAddress,
      overrides || {}
    );
  }
  override attach(address: string): PhiShop {
    return super.attach(address) as PhiShop;
  }
  override connect(signer: Signer): PhiShop__factory {
    return super.connect(signer) as PhiShop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiShopInterface {
    return new utils.Interface(_abi) as PhiShopInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiShop {
    return new Contract(address, _abi, signerOrProvider) as PhiShop;
  }
}
